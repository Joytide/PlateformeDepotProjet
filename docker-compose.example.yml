version: "3.9"

services:
    api: 
        container_name: api
        build: ./server
        ports:
            - 3000:3000
        environment:
            MONGO_USERNAME: root
            MONGO_PASSWORD: example
            API_LISTEN_IP: "0.0.0.0"
        volumes:
            - api_uploads:/usr/src/app/.uploads
            - api_pdf:/usr/src/app/PDF
        depends_on:
            - mongo
            - redis

    admin:
        container_name: admin
        build: ./admin
        volumes:
            - './admin:/app'
            - '/app/node_modules'
        ports:
            - 3001:3000
        environment:
            - CHOKIDAR_USEPOLLING=true

    client:
        container_name: client
        build: ./client
        volumes:
            - './client:/app'
            - '/app/node_modules'
        ports:
            - 3002:3000
        environment:
            - CHOKIDAR_USEPOLLING=true
            - DANGEROUSLY_DISABLE_HOST_CHECK=true

    redis:
        image: redis
        container_name: redis
        volumes:
            - redis:/data

    mongo:    
        image: mongo
        container_name: mongo
        restart: always
        volumes:
            - mongo:/data/db
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example

    mongo-express:
        image: mongo-express
        container_name: mongo-express
        restart: always
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: example
            ME_CONFIG_MONGODB_SERVER: mongo
            ME_CONFIG_BASICAUTH_USERNAME: root 
            ME_CONFIG_BASICAUTH_PASSWORD: example
        depends_on:
            - mongo
volumes:
    mongo:
    redis:
    api:
